kind: Build
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    openshift.io/build-config.name: blog-django-py
    openshift.io/build.number: '1'
    openshift.io/build.pod-name: blog-django-py-1-build
  selfLink: /apis/build.openshift.io/v1/namespaces/grupo11/builds/blog-django-py-1
  resourceVersion: '18352347'
  name: blog-django-py-1
  uid: b124d0bc-a339-4242-a674-d72ff620890f
  creationTimestamp: '2022-01-12T00:30:34Z'
  namespace: grupo11
  ownerReferences:
    - apiVersion: build.openshift.io/v1
      kind: BuildConfig
      name: blog-django-py
      uid: 9bcd6463-8746-46fa-a410-06f44870b656
      controller: true
  labels:
    app: blog-django-py
    app.kubernetes.io/part-of: blog-django-py-app
    app.kubernetes.io/instance: blog-django-py
    openshift.io/build-config.name: blog-django-py
    app.kubernetes.io/component: blog-django-py
    openshift.io/build.start-policy: Serial
    buildconfig: blog-django-py
    app.openshift.io/runtime: python
    app.kubernetes.io/name: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'blog-django-py:latest'
    pushSecret:
      name: builder-dockercfg-6hl4t
  resources: {}
  triggeredBy:
    - message: Image change
      imageChangeBuild:
        imageID: >-
          image-registry.openshift-image-registry.svc:5000/openshift/python@sha256:210326ea7d1a940d7e8f057cc96a6115c8443658b91a95d6c0ddc91ad80566cd
        fromRef:
          kind: ImageStreamTag
          namespace: openshift
          name: 'python:3.8-ubi7'
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: DockerImage
        name: >-
          image-registry.openshift-image-registry.svc:5000/openshift/python@sha256:210326ea7d1a940d7e8f057cc96a6115c8443658b91a95d6c0ddc91ad80566cd
      pullSecret:
        name: builder-dockercfg-6hl4t
  postCommit: {}
  serviceAccount: builder
  source:
    type: Git
    git:
      uri: 'https://github.com/openshift-instruqt/blog-django-py'
    contextDir: /
  revision:
    type: Git
    git:
      commit: 9c4f338ab5f3a5ae379ecaa5bcc7d449fa41648e
      author:
        name: ryan jarvinen
        email: ryan.jarvinen@gmail.com
      committer:
        name: GitHub
        email: noreply@github.com
      message: 'Merge pull request #9 from mixpix3ls/master'
status:
  output:
    to:
      imageDigest: 'sha256:6af83cd7529a48995371d726c703c4f58d2ceba899a3e488ea7d0760c864986h'
  config:
    kind: BuildConfig
    namespace: grupo11
    name: blog-django-py
  outputDockerImageReference: >-
    image-registry.openshift-image-registry.svc:5000/grupo11/blog-django-py:latest
  duration: 71000000000
  startTimestamp: '2022-01-12T00:30:34Z'
  stages:
    - name: FetchInputs
      startTime: '2022-01-12T00:30:38Z'
      durationMilliseconds: 441
      steps:
        - name: FetchGitSource
          startTime: '2022-01-12T00:30:38Z'
          durationMilliseconds: 441
    - name: PullImages
      startTime: '2022-01-12T00:30:40Z'
      durationMilliseconds: 21790
      steps:
        - name: PullBaseImage
          startTime: '2022-01-12T00:30:40Z'
          durationMilliseconds: 21790
    - name: Build
      startTime: '2022-01-12T00:31:02Z'
      durationMilliseconds: 41037
      steps:
        - name: DockerBuild
          startTime: '2022-01-12T00:31:02Z'
          durationMilliseconds: 41037
    - name: PushImage
      startTime: '2022-01-12T00:31:43Z'
      durationMilliseconds: 940
      steps:
        - name: PushImage
          startTime: '2022-01-12T00:31:43Z'
          durationMilliseconds: 940
  conditions:
    - type: New
      status: 'False'
      lastUpdateTime: '2022-01-12T00:30:34Z'
      lastTransitionTime: '2022-01-12T00:30:34Z'
    - type: Pending
      status: 'False'
      lastUpdateTime: '2022-01-12T00:30:38Z'
      lastTransitionTime: '2022-01-12T00:30:38Z'
    - type: Running
      status: 'False'
      lastUpdateTime: '2022-01-12T00:31:45Z'
      lastTransitionTime: '2022-01-12T00:31:45Z'
    - type: Complete
      status: 'True'
      lastUpdateTime: '2022-01-12T00:31:45Z'
      lastTransitionTime: '2022-01-12T00:31:45Z'
  completionTimestamp: '2022-01-12T00:31:45Z'
  phase: Complete
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    deployment.kubernetes.io/revision: '5'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"blog-django-py:latest","namespace":"grupo11"},"fieldPath":"spec.template.spec.containers[?(@.name==\"blog-django-py\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  selfLink: /apis/apps/v1/namespaces/grupo11/deployments/blog-django-py
  resourceVersion: '18373587'
  name: blog-django-py
  uid: cfdd35ef-a2c6-4949-8d5b-709355633827
  creationTimestamp: '2022-01-12T00:30:34Z'
  generation: 7
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2022-01-12T00:30:34Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:alpha.image.policy.openshift.io/resolve-names': {}
            'f:app.openshift.io/vcs-ref': {}
            'f:app.openshift.io/vcs-uri': {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-version': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector':
            'f:matchLabels':
              .: {}
              'f:app': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
                'f:deploymentconfig': {}
            'f:spec':
              'f:containers':
                'k:{"name":"blog-django-py"}':
                  .: {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2022-01-12T00:31:44Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"blog-django-py"}':
                  'f:image': {}
    - manager: oc
      operation: Update
      apiVersion: apps/v1
      time: '2022-01-12T01:05:28Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"blog-django-py"}':
                  'f:env':
                    .: {}
                    'k:{"name":"BLOG_BANNER_COLOR"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"BLOG_SITE_NAME"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"DATABASE_URL"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2022-01-12T01:05:32Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
  namespace: grupo11
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog-django-py
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blog-django-py
        deploymentconfig: blog-django-py
    spec:
      containers:
        - name: blog-django-py
          image: >-
            image-registry.openshift-image-registry.svc:5000/grupo11/blog-django-py@sha256:6af83cd7529a48995371d726c703c4f58d2ceba899a3e488ea7d0760c864986h
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: BLOG_BANNER_COLOR
              value: blue
            - name: BLOG_SITE_NAME
              value: 'FIAP ASO - GRUPO 11 '
            - name: DATABASE_URL
              value: 'postgresql://sampledb:sampledb@sample-database-grupo11:5432/sampledb'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 7
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-01-12T00:47:30Z'
      lastTransitionTime: '2022-01-12T00:47:30Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-01-12T01:05:32Z'
      lastTransitionTime: '2022-01-12T00:30:34Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "blog-django-py-69b68b866" has successfully progressed.
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.alpha.openshift.io/wait-for-ready: 'true'
  selfLink: >-
    /apis/apps.openshift.io/v1/namespaces/grupo11/deploymentconfigs/sample-database-grupo11
  resourceVersion: '18363296'
  name: sample-database-grupo11
  uid: 899d0962-4444-4664-b901-73a59b920da3
  creationTimestamp: '2022-01-12T00:49:39Z'
  generation: 2
  managedFields:
    - manager: oc
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2022-01-12T00:49:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:openshift.io/generated-by': {}
            'f:template.alpha.openshift.io/wait-for-ready': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:template': {}
        'f:spec':
          'f:replicas': {}
          'f:selector':
            .: {}
            'f:name': {}
          'f:strategy':
            'f:activeDeadlineSeconds': {}
            'f:recreateParams':
              .: {}
              'f:timeoutSeconds': {}
            'f:type': {}
          'f:template':
            .: {}
            'f:metadata':
              .: {}
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:creationTimestamp': {}
              'f:labels':
                .: {}
                'f:name': {}
            'f:spec':
              .: {}
              'f:containers':
                .: {}
                'k:{"name":"postgresql"}':
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/var/lib/pgsql/data"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:memory': {}
                  'f:livenessProbe':
                    .: {}
                    'f:exec':
                      .: {}
                      'f:command': {}
                    'f:failureThreshold': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:env':
                    .: {}
                    'k:{"name":"POSTGRESQL_DATABASE"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef':
                          .: {}
                          'f:key': {}
                          'f:name': {}
                    'k:{"name":"POSTGRESQL_PASSWORD"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef':
                          .: {}
                          'f:key': {}
                          'f:name': {}
                    'k:{"name":"POSTGRESQL_USER"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef':
                          .: {}
                          'f:key': {}
                          'f:name': {}
                  'f:readinessProbe':
                    .: {}
                    'f:exec':
                      .: {}
                      'f:command': {}
                    'f:failureThreshold': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:securityContext':
                    .: {}
                    'f:capabilities': {}
                    'f:privileged': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":5432,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
              'f:volumes':
                .: {}
                'k:{"name":"sample-database-grupo11-data"}':
                  .: {}
                  'f:name': {}
                  'f:persistentVolumeClaim':
                    .: {}
                    'f:claimName': {}
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2022-01-12T00:50:05Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"postgresql"}':
                  'f:image': {}
          'f:triggers': {}
        'f:status':
          'f:updatedReplicas': {}
          'f:readyReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:details':
            .: {}
            'f:causes': {}
            'f:message': {}
          'f:replicas': {}
          'f:availableReplicas': {}
          'f:observedGeneration': {}
          'f:unavailableReplicas': {}
          'f:latestVersion': {}
  namespace: grupo11
  labels:
    app: sample-database-grupo11
    app.kubernetes.io/component: sample-database-grupo11
    app.kubernetes.io/instance: sample-database-grupo11
    template: postgresql-persistent-template
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: sample-database-grupo11
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: sample-database-grupo11
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      volumes:
        - name: sample-database-grupo11-data
          persistentVolumeClaim:
            claimName: sample-database-grupo11
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: sample-database-grupo11
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sample-database-grupo11
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: sample-database-grupo11
                  key: database-name
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: sample-database-grupo11-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
status:
  observedGeneration: 2
  details:
    message: config change
    causes:
      - type: ConfigChange
  availableReplicas: 1
  unavailableReplicas: 0
  latestVersion: 1
  updatedReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-01-12T00:50:05Z'
      lastTransitionTime: '2022-01-12T00:50:05Z'
      message: Deployment config has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-01-12T00:50:05Z'
      lastTransitionTime: '2022-01-12T00:50:05Z'
      reason: NewReplicationControllerAvailable
      message: replication controller "sample-database-grupo11-1" successfully rolled out
  replicas: 1
  readyReplicas: 1
---
kind: Secret
apiVersion: v1
metadata:
  name: blog-django-py-generic-webhook-secret
  namespace: grupo11
  selfLink: /api/v1/namespaces/grupo11/secrets/blog-django-py-generic-webhook-secret
  uid: c28b7ca1-c68c-4739-b26b-fd623b464f5e
  resourceVersion: '18351633'
  creationTimestamp: '2022-01-12T00:30:34Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:30:34Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:WebHookSecretKey': {}
        'f:type': {}
data:
  WebHookSecretKey: YTQyMWNhNzA4ZmViYWQ3Mw==
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: blog-django-py-github-webhook-secret
  namespace: grupo11
  selfLink: /api/v1/namespaces/grupo11/secrets/blog-django-py-github-webhook-secret
  uid: d6c49e2b-33fd-4cec-817e-e85554db2e38
  resourceVersion: '18351666'
  creationTimestamp: '2022-01-12T00:30:35Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:30:35Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:WebHookSecretKey': {}
        'f:type': {}
data:
  WebHookSecretKey: NzViNzk3NTU4YTE1MDNkYQ==
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  selfLink: /api/v1/namespaces/grupo11/secrets/sample-database-grupo11
  resourceVersion: '18362965'
  name: sample-database-grupo11
  uid: 3832d5e9-b519-4c8f-9f83-83717903f55a
  creationTimestamp: '2022-01-12T00:49:39Z'
  managedFields:
    - manager: oc
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:49:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:database-name': {}
          'f:database-password': {}
          'f:database-user': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:openshift.io/generated-by': {}
            'f:template.openshift.io/expose-database_name': {}
            'f:template.openshift.io/expose-password': {}
            'f:template.openshift.io/expose-username': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:template': {}
        'f:type': {}
  namespace: grupo11
  labels:
    app: sample-database-grupo11
    app.kubernetes.io/component: sample-database-grupo11
    app.kubernetes.io/instance: sample-database-grupo11
    template: postgresql-persistent-template
data:
  database-name: c2FtcGxlZGI=
  database-password: c2FtcGxlZGI=
  database-user: c2FtcGxlZGI=
type: Opaque
---
kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v2beta2
metadata:
  name: example
  namespace: grupo11
  selfLink: >-
    /apis/autoscaling/v2beta2/namespaces/grupo11/horizontalpodautoscalers/example
  uid: f381fa2b-79e8-4ea0-b79c-784cdd0b3729
  resourceVersion: '18378506'
  creationTimestamp: '2022-01-12T01:13:07Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: autoscaling/v2beta2
      time: '2022-01-12T01:13:07Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:maxReplicas': {}
          'f:metrics': {}
          'f:minReplicas': {}
          'f:scaleTargetRef':
            'f:apiVersion': {}
            'f:kind': {}
            'f:name': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: autoscaling/v1
      time: '2022-01-12T01:13:22Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:autoscaling.alpha.kubernetes.io/conditions': {}
spec:
  scaleTargetRef:
    kind: Deployment
    name: example
    apiVersion: apps/v1
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
status:
  currentReplicas: 0
  desiredReplicas: 0
  currentMetrics: null
  conditions:
    - type: AbleToScale
      status: 'False'
      lastTransitionTime: '2022-01-12T01:13:22Z'
      reason: FailedGetScale
      message: >-
        the HPA controller was unable to get the target's current scale:
        deployments/scale.apps "example" not found
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    openshift.io/generated-by: OpenShiftWebConsole
  selfLink: /api/v1/namespaces/grupo11/services/blog-django-py
  resourceVersion: '18351658'
  name: blog-django-py
  uid: 246ce719-72d3-452e-b431-aeed8badf1a1
  creationTimestamp: '2022-01-12T00:30:34Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:30:34Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:app.openshift.io/vcs-ref': {}
            'f:app.openshift.io/vcs-uri': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-version': {}
        'f:spec':
          'f:ports':
            .: {}
            'k:{"port":8080,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector':
            .: {}
            'f:app': {}
            'f:deploymentconfig': {}
          'f:sessionAffinity': {}
          'f:type': {}
  namespace: grupo11
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: blog-django-py
    deploymentconfig: blog-django-py
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.openshift.io/expose-uri: 'postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}'
  selfLink: /api/v1/namespaces/grupo11/services/sample-database-grupo11
  resourceVersion: '18362967'
  name: sample-database-grupo11
  uid: 0baf1565-254d-469b-b9aa-a20f3838a11a
  creationTimestamp: '2022-01-12T00:49:39Z'
  managedFields:
    - manager: oc
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:49:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:openshift.io/generated-by': {}
            'f:template.openshift.io/expose-uri': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:template': {}
        'f:spec':
          'f:ports':
            .: {}
            'k:{"port":5432,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector':
            .: {}
            'f:name': {}
          'f:sessionAffinity': {}
          'f:type': {}
  namespace: grupo11
  labels:
    app: sample-database-grupo11
    app.kubernetes.io/component: sample-database-grupo11
    app.kubernetes.io/instance: sample-database-grupo11
    template: postgresql-persistent-template
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    name: sample-database-grupo11
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  annotations:
    openshift.io/host.generated: 'true'
  selfLink: /apis/route.openshift.io/v1/namespaces/grupo11/routes/blog-django-py
  resourceVersion: '18351668'
  name: blog-django-py
  uid: 4c9cd4c2-40aa-4182-8cbb-7565cae5fcdd
  creationTimestamp: '2022-01-12T00:30:35Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: route.openshift.io/v1
      time: '2022-01-12T00:30:35Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-version': {}
        'f:spec':
          'f:port':
            .: {}
            'f:targetPort': {}
          'f:to':
            'f:kind': {}
            'f:name': {}
            'f:weight': {}
          'f:wildcardPolicy': {}
    - manager: openshift-router
      operation: Update
      apiVersion: route.openshift.io/v1
      time: '2022-01-12T00:30:35Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:ingress': {}
  namespace: grupo11
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  host: blog-django-py-grupo11.apps.na46.prod.nextcle.com
  to:
    kind: Service
    name: blog-django-py
    weight: 100
  port:
    targetPort: 8080-tcp
  wildcardPolicy: None
status:
  ingress:
    - host: blog-django-py-grupo11.apps.na46.prod.nextcle.com
      routerName: default
      conditions:
        - type: Admitted
          status: 'True'
          lastTransitionTime: '2022-01-12T00:30:35Z'
      wildcardPolicy: None
      routerCanonicalHostname: apps.na46.prod.nextcle.com
---
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    openshift.io/generated-by: OpenShiftWebConsole
  selfLink: /apis/build.openshift.io/v1/namespaces/grupo11/buildconfigs/blog-django-py
  resourceVersion: '18351636'
  name: blog-django-py
  uid: 9bcd6463-8746-46fa-a410-06f44870b656
  creationTimestamp: '2022-01-12T00:30:34Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: build.openshift.io/v1
      time: '2022-01-12T00:30:34Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:app.openshift.io/vcs-ref': {}
            'f:app.openshift.io/vcs-uri': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-version': {}
        'f:spec':
          'f:output':
            'f:to':
              .: {}
              'f:kind': {}
              'f:name': {}
          'f:runPolicy': {}
          'f:source':
            'f:contextDir': {}
            'f:git':
              .: {}
              'f:uri': {}
            'f:type': {}
          'f:strategy':
            'f:sourceStrategy':
              .: {}
              'f:from':
                .: {}
                'f:kind': {}
                'f:name': {}
                'f:namespace': {}
            'f:type': {}
    - manager: openshift-apiserver
      operation: Update
      apiVersion: build.openshift.io/v1
      time: '2022-01-12T00:30:34Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:triggers': {}
        'f:status':
          'f:lastVersion': {}
  namespace: grupo11
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'blog-django-py:latest'
  resources: {}
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 5
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'python:3.8-ubi7'
  postCommit: {}
  source:
    type: Git
    git:
      uri: 'https://github.com/openshift-instruqt/blog-django-py'
    contextDir: /
  triggers:
    - type: Generic
      generic:
        secretReference:
          name: blog-django-py-generic-webhook-secret
    - type: GitHub
      github:
        secretReference:
          name: blog-django-py-github-webhook-secret
    - type: ImageChange
      imageChange:
        lastTriggeredImageID: >-
          image-registry.openshift-image-registry.svc:5000/openshift/python@sha256:210326ea7d1a940d7e8f057cc96a6115c8443658b91a95d6c0ddc91ad80566cd
    - type: ConfigChange
  runPolicy: Serial
status:
  lastVersion: 1
---
kind: Build
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    openshift.io/build-config.name: blog-django-py
    openshift.io/build.number: '1'
    openshift.io/build.pod-name: blog-django-py-1-build
  selfLink: /apis/build.openshift.io/v1/namespaces/grupo11/builds/blog-django-py-1
  resourceVersion: '18352347'
  name: blog-django-py-1
  uid: b124d0bc-a339-4242-a674-d72ff620890f
  creationTimestamp: '2022-01-12T00:30:34Z'
  namespace: grupo11
  ownerReferences:
    - apiVersion: build.openshift.io/v1
      kind: BuildConfig
      name: blog-django-py
      uid: 9bcd6463-8746-46fa-a410-06f44870b656
      controller: true
  labels:
    app: blog-django-py
    app.kubernetes.io/part-of: blog-django-py-app
    app.kubernetes.io/instance: blog-django-py
    openshift.io/build-config.name: blog-django-py
    app.kubernetes.io/component: blog-django-py
    openshift.io/build.start-policy: Serial
    buildconfig: blog-django-py
    app.openshift.io/runtime: python
    app.kubernetes.io/name: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  output:
    to:
      kind: ImageStreamTag
      name: 'blog-django-py:latest'
    pushSecret:
      name: builder-dockercfg-6hl4t
  resources: {}
  triggeredBy:
    - message: Image change
      imageChangeBuild:
        imageID: >-
          image-registry.openshift-image-registry.svc:5000/openshift/python@sha256:210326ea7d1a940d7e8f057cc96a6115c8443658b91a95d6c0ddc91ad80566cd
        fromRef:
          kind: ImageStreamTag
          namespace: openshift
          name: 'python:3.8-ubi7'
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: DockerImage
        name: >-
          image-registry.openshift-image-registry.svc:5000/openshift/python@sha256:210326ea7d1a940d7e8f057cc96a6115c8443658b91a95d6c0ddc91ad80566cd
      pullSecret:
        name: builder-dockercfg-6hl4t
  postCommit: {}
  serviceAccount: builder
  source:
    type: Git
    git:
      uri: 'https://github.com/openshift-instruqt/blog-django-py'
    contextDir: /
  revision:
    type: Git
    git:
      commit: 9c4f338ab5f3a5ae379ecaa5bcc7d449fa41648e
      author:
        name: ryan jarvinen
        email: ryan.jarvinen@gmail.com
      committer:
        name: GitHub
        email: noreply@github.com
      message: 'Merge pull request #9 from mixpix3ls/master'
status:
  output:
    to:
      imageDigest: 'sha256:6af83cd7529a48995371d726c703c4f58d2ceba899a3e488ea7d0760c864986h'
  config:
    kind: BuildConfig
    namespace: grupo11
    name: blog-django-py
  outputDockerImageReference: >-
    image-registry.openshift-image-registry.svc:5000/grupo11/blog-django-py:latest
  duration: 71000000000
  startTimestamp: '2022-01-12T00:30:34Z'
  stages:
    - name: FetchInputs
      startTime: '2022-01-12T00:30:38Z'
      durationMilliseconds: 441
      steps:
        - name: FetchGitSource
          startTime: '2022-01-12T00:30:38Z'
          durationMilliseconds: 441
    - name: PullImages
      startTime: '2022-01-12T00:30:40Z'
      durationMilliseconds: 21790
      steps:
        - name: PullBaseImage
          startTime: '2022-01-12T00:30:40Z'
          durationMilliseconds: 21790
    - name: Build
      startTime: '2022-01-12T00:31:02Z'
      durationMilliseconds: 41037
      steps:
        - name: DockerBuild
          startTime: '2022-01-12T00:31:02Z'
          durationMilliseconds: 41037
    - name: PushImage
      startTime: '2022-01-12T00:31:43Z'
      durationMilliseconds: 940
      steps:
        - name: PushImage
          startTime: '2022-01-12T00:31:43Z'
          durationMilliseconds: 940
  conditions:
    - type: New
      status: 'False'
      lastUpdateTime: '2022-01-12T00:30:34Z'
      lastTransitionTime: '2022-01-12T00:30:34Z'
    - type: Pending
      status: 'False'
      lastUpdateTime: '2022-01-12T00:30:38Z'
      lastTransitionTime: '2022-01-12T00:30:38Z'
    - type: Running
      status: 'False'
      lastUpdateTime: '2022-01-12T00:31:45Z'
      lastTransitionTime: '2022-01-12T00:31:45Z'
    - type: Complete
      status: 'True'
      lastUpdateTime: '2022-01-12T00:31:45Z'
      lastTransitionTime: '2022-01-12T00:31:45Z'
  completionTimestamp: '2022-01-12T00:31:45Z'
  phase: Complete
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    openshift.io/generated-by: OpenShiftWebConsole
  selfLink: /apis/image.openshift.io/v1/namespaces/grupo11/imagestreams/blog-django-py
  resourceVersion: '18352287'
  name: blog-django-py
  uid: 20d8fb92-9d65-4591-92b7-4277fd78d46d
  creationTimestamp: '2022-01-12T00:30:34Z'
  generation: 1
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: image.openshift.io/v1
      time: '2022-01-12T00:30:34Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:app.openshift.io/vcs-ref': {}
            'f:app.openshift.io/vcs-uri': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-version': {}
  namespace: grupo11
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  lookupPolicy:
    local: false
status:
  dockerImageRepository: 'image-registry.openshift-image-registry.svc:5000/grupo11/blog-django-py'
  publicDockerImageRepository: >-
    default-route-openshift-image-registry.apps.na46.prod.nextcle.com/grupo11/blog-django-py
  tags:
    - tag: latest
      items:
        - created: '2022-01-12T00:31:44Z'
          dockerImageReference: >-
            image-registry.openshift-image-registry.svc:5000/grupo11/blog-django-py@sha256:6af83cd7529a48995371d726c703c4f58d2ceba899a3e488ea7d0760c864986h
          image: >-
            sha256:6af83cd7529a48995371d726c703c4f58d2ceba899a3e488ea7d0760c864986h
          generation: 1
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    pv.kubernetes.io/bind-completed: 'yes'
    pv.kubernetes.io/bound-by-controller: 'yes'
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/cinder
    volume.kubernetes.io/selected-node: na46-bjfsg-worker-0-lpvpl
  selfLink: /api/v1/namespaces/grupo11/persistentvolumeclaims/sample-database-grupo11
  resourceVersion: '18363036'
  name: sample-database-grupo11
  uid: 7128ab7f-5cf5-4876-aa02-27f5e0a8deea
  creationTimestamp: '2022-01-12T00:49:39Z'
  managedFields:
    - manager: oc
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:49:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:template': {}
        'f:spec':
          'f:accessModes': {}
          'f:resources':
            'f:requests':
              .: {}
              'f:storage': {}
          'f:volumeMode': {}
    - manager: kube-scheduler
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:49:42Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:volume.kubernetes.io/selected-node': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2022-01-12T00:49:43Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:pv.kubernetes.io/bind-completed': {}
            'f:pv.kubernetes.io/bound-by-controller': {}
            'f:volume.beta.kubernetes.io/storage-provisioner': {}
        'f:spec':
          'f:volumeName': {}
        'f:status':
          'f:accessModes': {}
          'f:capacity':
            .: {}
            'f:storage': {}
          'f:phase': {}
  namespace: grupo11
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    app: sample-database-grupo11
    app.kubernetes.io/component: sample-database-grupo11
    app.kubernetes.io/instance: sample-database-grupo11
    template: postgresql-persistent-template
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: pvc-7128ab7f-5cf5-4876-aa02-27f5e0a8deee
  storageClassName: standard
  volumeMode: Filesystem
status:
  phase: Bound
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi